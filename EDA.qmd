---
title: "EDA"
format:
  html:
    toc: true
    html-math-method: katex
    css: styles.css
---


## Import packages
```{r}
library(tidyverse)
library(dlookr)
library(DataExplorer)
```








## Load data

```{r}
CD_CA_T <- read_csv("cleansed data 3/CD_CA_T.csv")
final_dataset <- read_csv("cleansed data 3/final_dataset.csv")
NewCustomerList <- read_csv("cleansed data 2/NewCustomerList.csv")
```


### Convert to proper data types

```{r}
CD_CA_T$customer_id <- as.character(CD_CA_T$customer_id)
CD_CA_T$postcode <- as.character(CD_CA_T$postcode)
```


```{r}
final_dataset$customer_id <- as.character(final_dataset$customer_id)
final_dataset$postcode <- as.character(final_dataset$postcode)
```



```{r}
CD_CA_T$gender <- factor(CD_CA_T$gender, ordered = FALSE)
final_dataset$gender <- factor(final_dataset$gender, ordered = FALSE)
```



```{r}
CD_CA_T$job_title <- factor(
  CD_CA_T$job_title,
  ordered = FALSE)

CD_CA_T$job_industry_category <- factor(
  CD_CA_T$job_industry_category,
  ordered = FALSE)
# levels(CD_CA_T$job_industry_category)
# to list out levels in a factor

CD_CA_T$wealth_segment <- factor(
  CD_CA_T$wealth_segment,
  ordered = TRUE,
  levels = c('Mass Customer', 'Affluent Customer', 'High Net Worth'))


CD_CA_T$owns_car <- factor(
  CD_CA_T$owns_car,
  ordered = FALSE)
```

```{r}
final_dataset$job_title <- factor(
  final_dataset$job_title,
  ordered = FALSE)

final_dataset$job_industry_category <- factor(
  final_dataset$job_industry_category,
  ordered = FALSE)
# levels(CD_CA_T$job_industry_category)
# to list out levels in a factor

final_dataset$wealth_segment <- factor(
  final_dataset$wealth_segment,
  ordered = TRUE,
  levels = c('Mass Customer', 'Affluent Customer', 'High Net Worth'))


final_dataset$owns_car <- factor(
  final_dataset$owns_car,
  ordered = FALSE)

final_dataset$street_number <- as.character(final_dataset$street_number)

final_dataset$state <- as.factor(final_dataset$state)
final_dataset$country <- as.factor(final_dataset$country)

final_dataset$Target <- factor(final_dataset$Target, 
                         ordered = TRUE,
                         levels = c('Low-Value', 'Mid-Value', 'High-Value'))
```



```{r}
NewCustomerList$gender <- as.factor(NewCustomerList$gender)
NewCustomerList$job_title <- as.factor(NewCustomerList$job_title)

NewCustomerList$job_industry_category <- as.factor(NewCustomerList$job_industry_category)
NewCustomerList$wealth_segment <- factor(
  NewCustomerList$wealth_segment,
  ordered = TRUE,
  levels = c('Mass Customer', 'Affluent Customer', 'High Net Worth'))

NewCustomerList$owns_car <- as.factor(NewCustomerList$owns_car)
NewCustomerList$postcode <- as.character(NewCustomerList$postcode)
NewCustomerList$state <- as.factor(NewCustomerList$state)
NewCustomerList$country <- as.factor(NewCustomerList$country)
```

```{r}
CD_CA_T$street_number <- as.character(CD_CA_T$street_number)
CD_CA_T$state <- as.factor(CD_CA_T$state)
CD_CA_T$country <- as.factor(CD_CA_T$country)
CD_CA_T$transaction_id <- as.character(CD_CA_T$transaction_id)
CD_CA_T$order_status <- as.factor(CD_CA_T$order_status)


CD_CA_T$product_id <- as.character(CD_CA_T$product_id)
CD_CA_T$product_class <- factor(CD_CA_T$product_class, 
                                     ordered = TRUE,
                                     levels = c('low', 'medium', 'high'))
CD_CA_T$product_size <- factor(CD_CA_T$product_size, 
                                    ordered = TRUE,
                                    levels = c('small', 'medium', 'large'))
CD_CA_T$brand <- factor(CD_CA_T$brand, ordered = FALSE)

CD_CA_T$Target <- factor(CD_CA_T$Target, 
                         ordered = TRUE,
                         levels = c('Low-Value', 'Mid-Value', 'High-Value'))
```


Split address column in NewCustomerList into street number and street name
```{r}
NewCustomerList <- separate(NewCustomerList, address, into = c("street_number", "street_name"), sep = " ", remove = FALSE, extra = "merge")
# extra = "merge" to indicate that any additional separators should be merged back 
# into the last column. This is for cases where street names have spaces.
```

```{r}
# remove leading zeros in any street_number values that have them
NewCustomerList$street_number <- as.character(as.numeric(NewCustomerList$street_number))
```

```{r}
# remove address column
NewCustomerList <- NewCustomerList |> select(-address)
```


```{r}
head(NewCustomerList)
```



```{r}
glimpse(CD_CA_T)
```



```{r}
glimpse(final_dataset)
```


```{r}
glimpse(NewCustomerList)
```


## Add new features


Categorize age into 4 groups
18-24, 25-34, 35-44, 45-54, 55-64 and 65 and over

```{r}
CD_CA_T$age_group <- case_when(
  CD_CA_T$age >= 18 & CD_CA_T$age <= 24 ~ '18-24',
  CD_CA_T$age >= 25 & CD_CA_T$age <= 34 ~ '25-34',
  CD_CA_T$age >= 35 & CD_CA_T$age <= 44 ~ '35-44',
  CD_CA_T$age >= 45 & CD_CA_T$age <= 54 ~ '45-54',
  CD_CA_T$age >= 55 & CD_CA_T$age <= 64 ~ '55-64',
  CD_CA_T$age >= 65 ~ '65+'
)
CD_CA_T$age_group <- factor(CD_CA_T$age_group, ordered = TRUE,
                            levels = c('18-24', '25-34', '35-44', '45-54', '55-64', '65+'))


final_dataset$age_group <- case_when(
  final_dataset$age >= 18 & final_dataset$age <= 24 ~ '18-24',
  final_dataset$age >= 25 & final_dataset$age <= 34 ~ '25-34',
  final_dataset$age >= 35 & final_dataset$age <= 44 ~ '35-44',
  final_dataset$age >= 45 & final_dataset$age <= 54 ~ '45-54',
  final_dataset$age >= 55 & final_dataset$age <= 64 ~ '55-64',
  final_dataset$age >= 65 ~ '65+'
)
final_dataset$age_group <- factor(final_dataset$age_group, ordered = TRUE,
                            levels = c('18-24', '25-34', '35-44', '45-54', '55-64', '65+'))
```

```{r}
# remove age column
CD_CA_T <- CD_CA_T |> select(-age)
final_dataset <- final_dataset |> select(-age)
```




Aggregate job titles into 4 categories to reduce high cardinality:
1. Managerial
2. Administrative
2. Technical
3. Quantitative
```{r}
source("aggregate_job_titles.R")

# View the result
table(CD_CA_T$job_type)
```

```{r}
# remove job_title column
CD_CA_T <- CD_CA_T |> select(-job_title)
final_dataset <- final_dataset |> select(-job_title)

```


## Explore data

```{r}
final_dataset |>
  eda_web_report(target = "Target", browser = FALSE, 
                 output_dir = "./", output_file = "final_dataset_EDA.html", 
                 theme = "blue")
```

```{r}
CD_CA_T |> 
  select(-c(customer_id, transaction_id, product_id, 
            transaction_date, product_first_sold_date)) |>
  eda_web_report(target = "Target", browser = FALSE, 
                 output_dir = "./", output_file = "CD_CA_T_EDA.html", 
                 theme = "blue")
```



```{r}
CD_CA_T |>
  ggplot(aes(x = age_group)) +
  geom_bar(aes(fill = age_group)) +
  geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5) +
  labs(title = 'Distribution of Age Groups',
       x = 'Age Group',
       y = 'Count') +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = 'none')
```



```{r}
CD_CA_T |>
  ggplot(aes(x = Target)) +
  geom_bar(aes(fill = Target)) +
  geom_text(stat = 'count', aes(label = after_stat(count)), vjust = -0.5) +
  labs(title = 'Distribution of Target Variable',
       x = 'Target',
       y = 'Count') +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = 'none') +
  scale_fill_manual(values = c('Low-Value' = 'darkred',
                               'Mid-Value' = 'lightyellow',
                               'High-Value' = 'darkgreen'))
```
Potential class imbalance problem. Will need to address this later.




Recall CD_CA_T contains observations at the customer level.

Each row represents a customer, with information about their demographics, sum of profit accrued from their transactions, how many purchases they made, their target value (low, mid, or high value customer), etc.




```{r}
# plot distribution of age group and wealth segment
CD_CA_T |>
  ggplot(aes(x = age_group, fill = wealth_segment)) +
  geom_bar(position = "dodge") +
  labs(title = 'Distribution of Age Group and Wealth Segment',
       x = 'Age Group',
       y = 'Count') +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = 'bottom')
```
Across all age groups, the majority of customers are in the Mass Customer wealth segment.
The Affluent Customer segment and the High Net Worth segment are roughly the same size.
This indicates that overall, our main audience is Mass Customers.

```{r}
# frequency table of wealth segment
CD_CA_T |>
  count(wealth_segment) |>
  mutate(prop = n / sum(n))
```


Let's see if the majority of our customers (ie. Mass Customers) are also the ones who bring in the most profit.
```{r}
# make a clustered bar plot to answer:
# which age group and wealth segment bring in the most profit (Monetary column)?
CD_CA_T |>
  ggplot(aes(x = age_group, y = Monetary, fill = wealth_segment)) +
  geom_col(position = 'dodge') +
  labs(title = 'Distribution of Profit by Age Group and Wealth Segment',
       x = 'Age Group',
       y = 'Profit') +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = 'bottom')
```


```{r}
# make a bar plot to answer:
# which age group and wealth segment bring in the most profit (Monetary column)?
CD_CA_T |>
  ggplot(aes(x = age_group, y = Monetary, fill = wealth_segment)) +
  geom_boxplot() +
  labs(title = 'Distribution of Monetary by Age Group and Wealth Segment',
       x = 'Age Group',
       y = 'Monetary') +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = 'bottom')
```


```{r}
# using dplyr, summarize past 3 years bike related purchases by industry
CD_CA_T |> summarize(
  total_bike_purchases = sum(past_3_years_bike_related_purchases),
  .by = job_industry_category) |> arrange(desc(total_bike_purchases)) |> 
  # plot a bar chart
  ggplot(aes(y = reorder(job_industry_category, total_bike_purchases), 
             x = total_bike_purchases)) +
  geom_bar(stat="identity") +
  labs(title = 'Distribution of Past 3 Years Bike Related Purchases by Industry',
       x = 'Industry',
       y = 'Past 3 Years Bike Related Purchases')
```
Top 3 industries with the most past 3 years bike related purchases are Manufacturing, Financial Services, and Health.





```{r}
# figure out total past 3 years bike related purchases by gender
# using dplyr
CD_CA_T |> summarize(
  total_bike_purchases = sum(past_3_years_bike_related_purchases),
  .by = gender)

ggplot(CD_CA_T, aes(x = gender, y = past_3_years_bike_related_purchases)) +
  geom_bar(stat="identity") +
  labs(title = 'Past 3 Years Bike Related Purchases by Gender ')
```



```{r}
summary(CD_CA_T$past_3_years_bike_related_purchases)
boxplot(CD_CA_T$past_3_years_bike_related_purchases, horizontal = TRUE)
```

```{r}
# from DataExplorer

# plot factor variables based on frequency (number of customers in each category)
plot_bar(CD_CA_T, 
         nrow = 2, ncol = 2)
```

```{r}
# with = indicates name of continuous feature to be summed. 
# default is NULL, i.e., frequency.
plot_bar(CD_CA_T, 
         with = "past_3_years_bike_related_purchases",
         nrow = 2, ncol = 2)
```



Gender distribution is pretty balanced, so we will not have any gender bias in training.

Most of the customers in 2017 are in the Mass segment and work in Manufacturing, Financial Services, and Health.

This majority of the customers also have the most bike related purchases in the last 3 years.



```{r}
plot_bar(CD_CA_T, 
         by = 'gender', 
         ncol = 2)
```

Customers who did not provide their gender information appear to work mostly in IT.

```{r}
nrow(
  CD_CA_T |> 
    filter(job_industry_category == "IT",
           gender == "U")
)

nrow(
  CD_CA_T |> 
    filter(gender == "U")
)
```

A [2020 study](https://anitab.org/research-and-impact/top-companies/2020-results/) by the AnitaB.org Institute found that women make up 28.8% of the tech workforce, a steady increase from the past few years \-- 25.9% in 2018 and 26.2% in 2019.

So we will assume/expect that majority of U gender customers are Male.

```{r}
# current gender distribution, before imputation
table(
  (CD_CA_T |> 
     filter(job_industry_category == "IT"))[, "gender"])
```

```{r}
plot_bar(CD_CA_T, 
         by = 'wealth_segment', 
         ncol = 2)
```

```{r}
plot_bar(CD_CA_T, 
         by = 'job_industry_category', 
         ncol = 2)
```


```{r}
# library(flextable)
dlookr::diagnose_numeric(CD_CA_T)
```
